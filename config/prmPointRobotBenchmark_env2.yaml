# each list element is a list of tuples containing the coordinates of the
# vertices of the polygonal obstacles in the workspace
WO:
  - [[1, 1], [2, 1], [2, 5], [1, 5]]
  - [[3, 4], [4, 4], [4, 12], [3, 12]]
  - [[3, 12], [12, 12], [12, 13], [3, 13]]
  - [[12, 5], [13, 5], [13, 13], [12, 13]]
  - [[6, 5], [12, 5], [12, 6], [6, 6]]

# coordinates of the robot start state in state space
# [x, y]
startState: [0, 0]

# coordinates of the robot goal state in the workspace
# [x, y]
goalState: [10, 10]


# determines N such that CSpace is discretized into an NxN grid
# not really used for the PRM planner, so keep it very sparse for speed
linearDiscretizationDensity: 3

# determines whether the CSpace will be made square when enlarged for planning.
# for the gradient descent planner, you must set this to be True
makeSquareCSpace: True

# if not making CSpace square, give it a list of minimum bounds in each cspace
# coordinate direction
minCSpaceBounds:
  - -1.0
  - -1.0

# if not making CSpace square, give it a list of maximum bounds in each cspace
# coordinate direction
maxCSpaceBounds:
  - 13.0
  - 13.0


##
## setup PRM planner params
##

# each of these lists must be the same size

# define a list of max sample numbers to try when running the planner
n: 
  - 200
  - 500
  - 1000

# define a list of radii in CSpace in which all samples must be connected by a
# line to try when running the planner
r:
  - 1.0
  - 2.0

# used to choose whether or not path smoothing should be varied between both
# true and false, or if it should just be on (or just off)
smoothing:
  - True
  - False

##
## setup simulation benchmarking
##

# define how many times the PRM should be run with its given settings when doing
# benchmarking and statistical performance analysis
numRunsOfPlannerPerSetting: 50

# define a list of planner paramters to vary parametrically while benchmarking.
# Should correspond to names of planner variables (lists of paramters) in the
# planner config section
paramterNamesToVary:
  - n
  - r
